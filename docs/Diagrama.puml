@startuml Computer Space

class Dibujo 
{
    -posicionX: int
    -posicionY: int
    -contenido: list<string>
    +Dibujo()
    +Dibujo(int, int)
    +Dibujo(list<string>, int, int)
    +Dibujar(ftxui::Screen&)
    +DesplazarX(int)
    +DesplazarY(int)
    +EstablecerPosicion(int, int)
}

class Archivo 
{
    -archivo: fstream
    -contenido: list<string>
    +Archivo(string)
    +CrearDibujo(): Dibujo
}

class Crea 
{
    +crea(Archivo&, list<Dibujo>&, size_t)
}

class Anima 
{
    -dibujos_: list<Dibujo>&
    -posicionesIniciales_: vector<pair<int, int>>&
    -desplazamientos_: vector<pair<int, int>>&
    +Anima(list<Dibujo>&, vector<pair<int, int>>&, vector<pair<int, int>>&)
    +EstablecerPosicionesIniciales()
    +ActualizarYDibujar(Screen&, size_t, chrono::milliseconds)
}

Crea "1" o-- "1" Archivo
Crea "1" o-- "*" Dibujo
Anima "1" o-- "*" Dibujo

class NaveEspacial 
{
    +Disparar()
    +DesplazarX(int)
    +DesplazarY(int)
}

class Jugador 
{
    +IniciarJuego()
    +FinalizarJuego()
}

class Ovni extends NaveEspacial 
{
    +Mover()
}

class Proyectil 
{
    +Mover()
}

class Pantalla 
{
    +MostrarJuego()
    +ActualizarPantalla()
}

class Sonido 
{
    +Reproducir()
    +Detener()
}

class Puntuacion

class Juego 
{
    -jugador: Jugador
    -navesEnemigas: list<Ovni>
    -proyectilesNaveJugador: list<Proyectil>
    -proyectilesOvnis: list<Proyectil>
    -pantalla: Pantalla
    -sonido: Sonido
    -puntuacion: Puntuacion
    +IniciarJuego()
    +FinalizarJuego()
    +NivelCompleto()
}

Juego "1" *-- "1" Anima
Juego "1" *-- "1" Jugador
Juego "1" o-- "*" Ovni
Juego "1" o-- "*" Proyectil
Juego "1" -- "1" Pantalla
Juego "1" -- "1" Sonido
Juego "1" -- "1" Puntuacion
Jugador "1" *-- "1" NaveEspacial
NaveEspacial "1" o-- "*" Proyectil
Ovni "1" o-- "*" Proyectil
Jugador "1" o-- "*" Proyectil : dispara
Ovni "1" o-- "*" Proyectil : dispara

@enduml